- IMPORTING NUMPY LIBRARY

import numpy as np

- NUMPY ARRAY OPERATORS

my_arr = np.arange(1000)
my_list = np.arange(1000)
data1 = [2,2.5,3,4.7,8.9,9.0]
array = np.array(data1,dtype = int)
print(array)
print(array.dtype)
print(array.shape)
print(array.ndim)
[2 2 3 4 8 9]
int32
(6,)
1
data2 = [[1,3,5,7,9,11],[2,4,6,8,10,12]] # both lists must have same number of elements
array2 = np.array(data2, dtype = int)
print(array2.ndim)
print(array2.shape)
2
(2, 6)
array3 = np.array([[1,3,5,7,9,11],[2,4,6,8,10,12]])
array3
array([[ 1,  3,  5,  7,  9, 11],
       [ 2,  4,  6,  8, 10, 12]])
array4 = np.eye(4, dtype = int)
array4
array([[1, 0, 0, 0],
       [0, 1, 0, 0],
       [0, 0, 1, 0],
       [0, 0, 0, 1]])


- ARITHEMETIC OPERATIONS


print(array3 * array3)
[[  1   9  25  49  81 121]
 [  4  16  36  64 100 144]]
print(array3 - array3)
[[0 0 0 0 0 0]
 [0 0 0 0 0 0]]
print(array3 **2)
[[  1   9  25  49  81 121]
 [  4  16  36  64 100 144]]
print(array3 > array)
[[False  True  True  True  True  True]
 [False  True  True  True  True  True]]


INDEXING AND SLICING


arr = np.arange(15)
arr
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14])
arr[5]
5
arr[5:12]
array([ 5,  6,  7,  8,  9, 10, 11])
arr[5:12] = 15
arr
array([ 0,  1,  2,  3,  4, 15, 15, 15, 15, 15, 15, 15, 12, 13, 14])
arr = np.arange(15)
arr_slice = arr[5:12]
arr_slice
array([ 5,  6,  7,  8,  9, 10, 11])
arr_slice[5] = 1629
arr
array([   0,    1,    2,    3,    4,    5,    6,    7,    8,    9, 1629,
         11,   12,   13,   14])
arr_slice[:] = 89
arr
array([ 0,  1,  2,  3,  4, 89, 89, 89, 89, 89, 89, 89, 12, 13, 14])


- 2-D ARRAY


arr2d = np.array([[1,3,5,7,9,11],[2,4,6,8,10,12],[1,5,12,14,72,124000]])
arr2d[2]
array([     1,      5,     12,     14,     72, 124000])
arr2d[1,3]
8


ACTIVITY 3


for i in range(len(arr2d)):
    print(arr2d[i,5])
11
12
124000
for i in range(-1,-3,-1):
    print(arr2d[1,i])
12
10


TYPES OF MATRICES

SINGLETON MATRIX


arr0 = np.array([1])
arr0
array([1])
- Null Matrix
arr1 = np.zeros((3,3))
arr1
array([[0., 0., 0.],
       [0., 0., 0.],
       [0., 0., 0.]])


- ROW MATRIX


arr2 = np.array([1,2,3,4,5])
arr2
array([1, 2, 3, 4, 5])


- COLUMN MATRIX


arr3 = np.array([[1],[2],[3]])
arr3
array([[1],
       [2],
       [3]])


- DIAGONAL MATRIX


arr4 = np.array([[8,0,0],[0,4,0],[0,0,9]])
arr4
array([[8, 0, 0],
       [0, 4, 0],
       [0, 0, 9]])


- SCALAR MATRIX


arr5 = np.array([[5,0,0],[0,5,0],[0,0,5]])
arr5
array([[5, 0, 0],
       [0, 5, 0],
       [0, 0, 5]])


- IDENTITY MATRIX


arr6 = np.eye(4)
arr6
array([[1., 0., 0., 0.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [0., 0., 0., 1.]])


- UPPER TRIANGULAR MATRIX


arr7 = np.array([[8,5,6],[0,4,7],[0,0,9]])
arr7
array([[8, 5, 6],
       [0, 4, 7],
       [0, 0, 9]])


- LOWER TRIANGULAR MATRIX


arr8 = np.array([[8,0,0],[6,4,0],[5,7,9]])
arr8
array([[8, 0, 0],
       [6, 4, 0],
       [5, 7, 9]])


- SINGULAR MATRIX


arr9 = np.array([[3,6,9],[6,12,18],[2,4,6]])
arr9
array([[ 3,  6,  9],
       [ 6, 12, 18],
       [ 2,  4,  6]])


- NON SINGULAR MATRIX


arr10 = np.array([[1,5],[9,8]])
arr10
array([[1, 5],
       [9, 8]])


-SYMMETRIC MATRIX


arr11 = np.array([[2,1],[1,2]])
arr11
array([[2, 1],
       [1, 2]])


- SKEW SYMMETRIC MATRIX


arr12 = np.array([[0,3,5],[-3,0,-2],[-5,2,0]])
arr12
array([[ 0,  3,  5],
       [-3,  0, -2],
       [-5,  2,  0]])


- IDEMPOTANT MATRIX


arr14 = np.array([[1,0],[0,0]])
arr14
array([[1, 0],
       [0, 0]])
